package prototype

const (
	System             = "system"
	TokenBasic         = "token-basic"
	TokenIssue         = "token-issue"
	TokenTemplet       = "token-templet"
	TokenTrade         = "token-trade"
	TokenBYB           = "token-byb"
	Cgs                = "crypto-gods"
	Clt                = "clt"
	Community          = "Community"
	Sxt                = "saving-xt"
	BlackList          = "black-list"
	Dice2Win           = "dice-2-win"
	DWUSDX             = "dice-2-win-usdx"
	DWDC               = "dice-2-win-dc"
	DWXT               = "dice-2-win-xt"
	UnitedToken        = "united-token"
	EveryColor         = "every-color"
	ECDC               = "every-color-dc"
	ECUSDX             = "every-color-usdx"
	DVST               = "dragon-vs-tiger"
	DVSTDC             = "dragon-vs-tiger-dc"
	DVSTUSDX           = "dragon-vs-tiger-usdx"
	DVSTXT             = "dragon-vs-tiger-xt"
	YUEBAODC           = "yuebao-dc"
	BACCARAT           = "baccarat-bcb"
	NEWDVST            = "dragon-vs-tiger-2.0"
	NEWDVSTDC          = "dragon-vs-tiger-dc-2.0"
	NEWDVSTUSDX        = "dragon-vs-tiger-usdx-2.0"
	NEWDVSTXT          = "dragon-vs-tiger-xt-2.0"
	ICT                = "gichain.net.incentive"
	NEWBACCARAT        = "baccarat-bcb-2.0"
	NEWBACCARATDC      = "baccarat-dc-2.0"
	NEWBACCARATXT      = "baccarat-xt-2.0"
	NEWBACCARATUSDX    = "baccarat-usdx-2.0"
	TAC                = "transferAgency"
	NEWBACCARAT3_0     = "baccarat-bcb-3.0"
	NEWBACCARATDC3_0   = "baccarat-dc-3.0"
	NEWBACCARATXT3_0   = "baccarat-xt-3.0"
	NEWBACCARATUSDX3_0 = "baccarat-usdx-3.0"
	Dice2Win2_0        = "dice-2-win-2.0"
	EveryColor2_0      = "every-color-2.0"
	SicBo              = "sic-bo"
	TB_Cancellation    = "token-basic-cancellation-1"
	UPGRADE1TO2        = "upgrade1to2"
	YUEBAOUSDY         = "yuebao-usdy"
	MINING             = "mining"
	TB_Team            = "token-basic-team"
	TB_Foundation      = "token-basic-foundation"

	SysNewValidator           = "NewValidator(string,smc.PubKey,smc.Address,uint64)smc.Error"
	SysSetPower               = "SetPower(smc.PubKey,uint64)smc.Error"
	SysSetRewardAddr          = "SetRewardAddr(smc.PubKey,smc.Address)smc.Error"
	SysForbidInternalContract = "ForbidInternalContract(smc.Address,uint64)smc.Error"
	SysDeployInternalContract = "DeployInternalContract(string,string,[]string,[]uint64,smc.Hash,uint64)(smc.Address,smc.Error)"
	SysSetRewardStrategy      = "SetRewardStrategy(string,uint64)smc.Error"

	TbTransfer        = "Transfer(smc.Address,big.Int)smc.Error"
	TbSetGasBasePrice = "SetGasBasePrice(uint64)smc.Error"
	TbSetGasPrice     = "SetGasPrice(uint64)smc.Error"

	TiNewToken = "NewToken(string,string,big.Int,bool,bool,uint64)(smc.Address,smc.Error)"

	TtTransfer      = "Transfer(smc.Address,big.Int)smc.Error"
	TtBatchTransfer = "BatchTransfer([]smc.Address,big.Int)smc.Error"
	TtAddSupply     = "AddSupply(big.Int)smc.Error"
	TtBurn          = "Burn(big.Int)smc.Error"
	TtSetGasPrice   = "SetGasPrice(uint64)smc.Error"
	TtSetOwner      = "SetOwner(smc.Address)smc.Error"
	TtUdcCreate     = "UdcCreate(smc.Address,big.Int,string)(smc.Hash,smc.Error)"
	TtUdcTransfer   = "UdcTransfer(smc.Hash,smc.Address,big.Int)(smc.Hash,smc.Hash,smc.Error)"
	TtUdcMature     = "UdcMature(smc.Hash)smc.Error"
	TtDealExchange  = "DealExchange(string,string)smc.Error"

	BYBInit                  = "Init(Number,bool,bool)smc.Error"
	BYBSetOwner              = "SetOwner(smc.Address)smc.Error"
	BYBSetGasPrice           = "SetGasPrice(uint64)smc.Error"
	BYBAddSupply             = "AddSupply(Number)smc.Error"
	BYBBurn                  = "Burn(Number)smc.Error"
	BYBNewBlackHole          = "NewBlackHole(smc.Address)smc.Error"
	BYBNewStockHolder        = "NewStockHolder(smc.Address,Number)(smc.Chromo,smc.Error)"
	BYBDelStockHolder        = "DelStockHolder(smc.Address)smc.Error"
	BYBChangeChromoOwnerShip = "ChangeChromoOwnership(smc.Chromo,smc.Address)smc.Error"
	BYBTransfer              = "Transfer(smc.Address,big.Int)smc.Error"
	BYBTransferByChromo      = "TransferByChromo(smc.Chromo,smc.Address,Number)smc.Error"

	CgsInit                   = "Init()smc.Error"
	CgsActivate               = "Active()smc.Error"
	CgsBuy                    = "Buy(int64,Number)smc.Error"
	CgsBuyXid                 = "BuyXid(int64,int64,Number)smc.Error"
	CgsBuyXaddr               = "BuyXaddr(smc.Address,int64,Number)smc.Error"
	CgsBuyXname               = "BuyXname(string,int64,Number)smc.Error"
	CgsSetOwner               = "SetOwner(smc.Address)smc.Error"
	CgsSetSetting             = "SetSettings(string)smc.Error"
	CgsGetCurrentRoundInfo    = "GetCurrentRoundInfo()(int64,Number,Number,Number,bool,Number,int64,int64,smc.Address,string,Number,Number,Number,Number,int64,Number,smc.Error)"
	CgsGetBuyPrice            = "GetBuyPrice()(Number,smc.Error)"
	CgsGetPrice               = "GetPrice(Number)(Number,smc.Error)"
	CgsGetKeys                = "GetKeys(Number)(Number,smc.Error)"
	CgsGetPlayerInfoByAddress = "GetPlayerInfoByAddress(smc.Address)(int64,string,Number,Number,Number,Number,Number,smc.Error)"
	CgsGetPlayerVault         = "GetPlayerVaults(int64)(Number,Number,Number,smc.Error)"
	CgsGetTimeLeft            = "GetTimeLeft()(Number,smc.Error)"
	CgsWithDraw               = "Withdraw()smc.Error"
	CgsReloadXid              = "ReLoadXid(int64,int64,Number)smc.Error"
	CgsReloadXaddr            = "ReLoadXaddr(smc.Address,int64,Number)smc.Error"
	CgsReloadXname            = "ReLoadXname(string,int64,Number)smc.Error"
	CgsRegisterNameXid        = "RegisterNameXid(string,int64,Number)smc.Error"
	CgsRegisterNameXaddr      = "RegisterNameXaddr(string,smc.Address,Number)smc.Error"
	CgsRegisterNameXname      = "RegisterNameXname(string,string,Number)smc.Error"
	SxtInit                   = "Init()smc.Error"
	SxtActivate               = "Active()smc.Error"
	SxtBuy                    = "Buy(int64,Number)smc.Error"
	SxtBuyXid                 = "BuyXid(int64,int64,Number)smc.Error"
	SxtBuyXaddr               = "BuyXaddr(smc.Address,int64,Number)smc.Error"
	SxtBuyXname               = "BuyXname(string,int64,Number)smc.Error"
	SxtSetOwner               = "SetOwner(smc.Address)smc.Error"
	SxtSetSetting             = "SetSettings(string)smc.Error"
	SxtGetCurrentRoundInfo    = "GetCurrentRoundInfo()(int64,Number,Number,Number,bool,Number,int64,int64,smc.Address,string,Number,Number,Number,Number,int64,Number,smc.Error)"
	SxtGetBuyPrice            = "GetBuyPrice()(Number,smc.Error)"
	SxtGetPrice               = "GetPrice(Number)(Number,smc.Error)"
	SxtGetKeys                = "GetKeys(Number)(Number,smc.Error)"
	SxtGetPlayerInfoByAddress = "GetPlayerInfoByAddress(smc.Address)(int64,string,Number,Number,Number,Number,Number,smc.Error)"
	SxtGetPlayerVault         = "GetPlayerVaults(int64)(Number,Number,Number,smc.Error)"
	SxtGetTimeLeft            = "GetTimeLeft()(Number,smc.Error)"
	SxtWithDraw               = "Withdraw()smc.Error"
	SxtReloadXid              = "ReLoadXid(int64,int64,Number)smc.Error"
	SxtReloadXaddr            = "ReLoadXaddr(smc.Address,int64,Number)smc.Error"
	SxtReloadXname            = "ReLoadXname(string,int64,Number)smc.Error"
	SxtRegisterNameXid        = "RegisterNameXid(string,int64,Number)smc.Error"
	SxtRegisterNameXaddr      = "RegisterNameXaddr(string,smc.Address,Number)smc.Error"
	SxtRegisterNameXname      = "RegisterNameXname(string,string,Number)smc.Error"

	CltSetOwner               = "SetOwner(smc.Address)smc.Error"
	CltTriggerDistribute      = "TriggerDistribute()smc.Error"
	CltBuy                    = "Buy(Number,smc.Address)smc.Error"
	CltReinvest               = "Reinvest()smc.Error"
	CltExit                   = "Exit()smc.Error"
	CltWithdraw               = "Withdraw()smc.Error"
	CltSell                   = "Sell(Number)smc.Error"
	CltTransfer               = "Transfer(smc.Address,big.Int)smc.Error"
	CltSetStakingRequirement  = "SetStakingRequirement(Number)smc.Error"
	CltGetGlobalData          = "GetGlobalData()CLT_GlobalData"
	CltGetPlayerInfo          = "GetPlayerInfo(smc.Address)CLT_Player"
	CltCalculateTokenReceived = "CalculateTokenReceived(Number)(Number,smc.Error)"
	CltCalculateBCBReceived   = "CalculateBCBReceived(Number)(Number,smc.Error)"

	BlmSetOwner   = "SetOwner(smc.Address)smc.Error"
	BlmAddAddress = "AddAddress([]smc.Address)smc.Error"
	BlmDelAddress = "DelAddress([]smc.Address)smc.Error"

	DWSetOwner        = "SetOwner(smc.Address)smc.Error"
	DWSetSecretSigner = "SetSecretSigner(smc.PubKey)smc.Error"
	DWSetSettings     = "SetSettings(string)smc.Error"
	DWSetRecFeeInfo   = "SetRecFeeInfo(string)smc.Error"
	DWWithdrawFunds   = "WithdrawFunds(smc.Address,Number)smc.Error"
	DWPlaceBet        = "PlaceBet(Number,Number,int64,int64,[]byte,[]byte,smc.Address)smc.Error"
	DWSettleBet       = "SettleBet([]byte,[]byte)smc.Error"
	DWRefundBet       = "RefundBet([]byte)smc.Error"
	DWClearStorage    = "ClearStorage(string)smc.Error"

	UtNewToken    = "NewToken(string,string,big.Int,bool,bool,uint64)(smc.Address,smc.Address,smc.Error)"
	UtTransfer    = "Transfer(smc.Address,big.Int)smc.Error"
	UtAddSupply   = "AddSupply(big.Int)smc.Error"
	UtBurn        = "Burn(big.Int)smc.Error"
	UtSetGasPrice = "SetGasPrice(uint64)smc.Error"
	UtSetOwner    = "SetOwner(smc.Address)smc.Error"
	UtSetGasPayer = "SetGasPayer(string)smc.Error"
	UtSetFee      = "SetFee(uint64,uint64,uint64)smc.Error"
	UtWithdraw    = "Withdraw()smc.Error"

	ECSetOwner        = "SetOwner(smc.Address)smc.Error"
	ECSetSecretSigner = "SetSecretSigner(smc.PubKey)smc.Error"
	ECSetSettings     = "SetSettings(string)smc.Error"
	ECSetRecvFeeInfo  = "SetRecvFeeInfo(string)smc.Error"
	ECWithdrawFunds   = "WithdrawFunds(string,smc.Address,Number)smc.Error"
	ECPlaceBet        = "PlaceBet(string,Number,string,int64,[]byte,[]byte,smc.Address)smc.Error"
	ECSettleBets      = "SettleBets([]byte,int64)smc.Error"
	ECRefundBets      = "RefundBets([]byte,int64)smc.Error"
	ECWithdrawWin     = "WithdrawWin([]byte)smc.Error"

	DTSetOwner        = "SetOwner(smc.Address)smc.Error"
	DTSetSecretSigner = "SetSecretSigner(smc.PubKey)smc.Error"
	DTSetSettings     = "SetSettings(string)smc.Error"
	DTSetRecvFeeInfo  = "SetRecvFeeInfo(string)smc.Error"
	DTWithdrawFunds   = "WithdrawFunds(smc.Address,Number)smc.Error"
	DTPlaceBet        = "PlaceBet(Number,string,int64,[]byte,[]byte,smc.Address)smc.Error"
	DTSettleBets      = "SettleBets([]byte,int64)smc.Error"
	DTRefundBet       = "RefundBet([]byte)smc.Error"
	DTRefundBets      = "RefundBets([]byte,int64)smc.Error"
	DTWithdrawWin     = "WithdrawWin([]byte)smc.Error"

	YEBSetOwner           = "SetOwner(smc.Address)smc.Error"
	YEBPromiseEarningRate = "PromiseEarningRate(string,string)smc.Error"
	YEBDepositsReceived   = "DepositsReceived(Number)smc.Error"
	YEBDepositsWithdrawal = "DepositsWithdrawal(Number)smc.Error"
	YEBDeposit            = "Deposit(Number)smc.Error"
	YEBWithdraw           = "Withdraw(Number)smc.Error"
	YEBWithdrawEarnings   = "WithdrawEarnings(Number,smc.Address)smc.Error"
	YEBReinvest           = "Reinvest(Number,smc.Address)smc.Error"
	YEBSetOperators       = "SetOperators([]smc.Address)smc.Error"

	BACSetOwner        = "SetOwner(smc.Address)smc.Error"
	BACSetSecretSigner = "SetSecretSigner(smc.PubKey)smc.Error"
	BACSetSettings     = "SetSettings(string)smc.Error"
	BACSetRecvFeeInfo  = "SetRecvFeeInfo(string)smc.Error"
	BACWithdrawFunds   = "WithdrawFunds(smc.Address,Number)smc.Error"
	BACPlaceBet        = "PlaceBet(Number,string,int64,[]byte,[]byte,smc.Address)smc.Error"
	BACSettleBets      = "SettleBets([]byte,int64)smc.Error"
	BACRefundBets      = "RefundBets([]byte,int64)smc.Error"
	BACWithdrawWin     = "WithdrawWin([]byte)smc.Error"

	ICTSetManager         = "SetManager(smc.Address)smc.Error"
	ICTSetPayManager      = "SetPayManager(smc.Address)smc.Error"
	ICTSetEmployeeBonuses = "SetEmployeeBonuses(string)smc.Error"
	ICTPayBonuses         = "PayBonuses(Number)smc.Error"

	TACSetManager    = "SetManager([]smc.Address)smc.Error"
	TACSetTokenFee   = "SetTokenFee(string)smc.Error"
	TACTransfer      = "Transfer(string,smc.Address,Number)smc.Error"
	TACWithdrawFunds = "WithdrawFunds(string,Number)smc.Error"

	DWSetOwner2_0        = "SetOwner(smc.Address)smc.Error"
	DWSetSecretSigner2_0 = "SetSecretSigner(smc.PubKey)smc.Error"
	DWSetSettings2_0     = "SetSettings(string)smc.Error"
	DWSetRecvFeeInfo2_0  = "SetRecvFeeInfo(string)smc.Error"
	DWWithdrawFunds2_0   = "WithdrawFunds(string,smc.Address,Number)smc.Error"
	DWPlaceBet2_0        = "PlaceBet(string,Number,Number,int64,int64,[]byte,[]byte,smc.Address)smc.Error"
	DWSettleBets2_0      = "SettleBets([]byte,int64)smc.Error"
	DWRefundBets2_0      = "RefundBets([]byte,int64)smc.Error"
	DWWithdrawWin2_0     = "WithdrawWin([]byte)smc.Error"

	SBSetOwner        = "SetOwner(smc.Address)smc.Error"
	SBSetSecretSigner = "SetSecretSigner(smc.PubKey)smc.Error"
	SBSetSettings     = "SetSettings(string)smc.Error"
	SBSetRecvFeeInfo  = "SetRecvFeeInfo(string)smc.Error"
	SBWithdrawFunds   = "WithdrawFunds(string,smc.Address,Number)smc.Error"
	SBPlaceBet        = "PlaceBet(string,Number,string,int64,[]byte,[]byte,smc.Address)smc.Error"
	SBSettleBets      = "SettleBets([]byte,int64)smc.Error"
	SBRefundBets      = "RefundBets([]byte,int64)smc.Error"
	SBWithdrawWin     = "WithdrawWin([]byte)smc.Error"

	TBCCancel = "Cancel()smc.Error"

	UPGRADE1TO2Upgrade = "Upgrade(string)(string,smc.Error)"

	MNMine      = "Mine()smc.Error"
	TBTWithdraw = "Withdraw()smc.Error"
	TBFWithdraw = "Withdraw()smc.Error"
)
